// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rtds.proto

#ifndef PROTOBUF_INCLUDED_rtds_2eproto
#define PROTOBUF_INCLUDED_rtds_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_rtds_2eproto 

namespace protobuf_rtds_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_rtds_2eproto
class ComMessage;
class ComMessageDefaultTypeInternal;
extern ComMessageDefaultTypeInternal _ComMessage_default_instance_;
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class MessageField;
class MessageFieldDefaultTypeInternal;
extern MessageFieldDefaultTypeInternal _MessageField_default_instance_;
namespace google {
namespace protobuf {
template<> ::ComMessage* Arena::CreateMaybeMessage<::ComMessage>(Arena*);
template<> ::Message* Arena::CreateMaybeMessage<::Message>(Arena*);
template<> ::MessageField* Arena::CreateMaybeMessage<::MessageField>(Arena*);
}  // namespace protobuf
}  // namespace google

enum ComMessageType {
  UNKNOWN = 0,
  AVAIL_MESSAGES = 1,
  ACTUAL_DATA = 2,
  REQUEST_MESSAGE_LIST = 3,
  ComMessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ComMessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ComMessageType_IsValid(int value);
const ComMessageType ComMessageType_MIN = UNKNOWN;
const ComMessageType ComMessageType_MAX = REQUEST_MESSAGE_LIST;
const int ComMessageType_ARRAYSIZE = ComMessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ComMessageType_descriptor();
inline const ::std::string& ComMessageType_Name(ComMessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ComMessageType_descriptor(), value);
}
inline bool ComMessageType_Parse(
    const ::std::string& name, ComMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ComMessageType>(
    ComMessageType_descriptor(), name, value);
}
// ===================================================================

class MessageField : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageField) */ {
 public:
  MessageField();
  virtual ~MessageField();

  MessageField(const MessageField& from);

  inline MessageField& operator=(const MessageField& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageField(MessageField&& from) noexcept
    : MessageField() {
    *this = ::std::move(from);
  }

  inline MessageField& operator=(MessageField&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageField& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageField* internal_default_instance() {
    return reinterpret_cast<const MessageField*>(
               &_MessageField_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MessageField* other);
  friend void swap(MessageField& a, MessageField& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageField* New() const final {
    return CreateMaybeMessage<MessageField>(NULL);
  }

  MessageField* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MessageField>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MessageField& from);
  void MergeFrom(const MessageField& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageField* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // float value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:MessageField)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  float value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rtds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Message* other);
  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const final {
    return CreateMaybeMessage<Message>(NULL);
  }

  Message* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MessageField fields = 5;
  int fields_size() const;
  void clear_fields();
  static const int kFieldsFieldNumber = 5;
  ::MessageField* mutable_fields(int index);
  ::google::protobuf::RepeatedPtrField< ::MessageField >*
      mutable_fields();
  const ::MessageField& fields(int index) const;
  ::MessageField* add_fields();
  const ::google::protobuf::RepeatedPtrField< ::MessageField >&
      fields() const;

  // string proto = 1;
  void clear_proto();
  static const int kProtoFieldNumber = 1;
  const ::std::string& proto() const;
  void set_proto(const ::std::string& value);
  #if LANG_CXX11
  void set_proto(::std::string&& value);
  #endif
  void set_proto(const char* value);
  void set_proto(const char* value, size_t size);
  ::std::string* mutable_proto();
  ::std::string* release_proto();
  void set_allocated_proto(::std::string* proto);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 ts = 4;
  void clear_ts();
  static const int kTsFieldNumber = 4;
  ::google::protobuf::uint64 ts() const;
  void set_ts(::google::protobuf::uint64 value);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::MessageField > fields_;
  ::google::protobuf::internal::ArenaStringPtr proto_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 ts_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rtds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ComMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ComMessage) */ {
 public:
  ComMessage();
  virtual ~ComMessage();

  ComMessage(const ComMessage& from);

  inline ComMessage& operator=(const ComMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComMessage(ComMessage&& from) noexcept
    : ComMessage() {
    *this = ::std::move(from);
  }

  inline ComMessage& operator=(ComMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComMessage* internal_default_instance() {
    return reinterpret_cast<const ComMessage*>(
               &_ComMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ComMessage* other);
  friend void swap(ComMessage& a, ComMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComMessage* New() const final {
    return CreateMaybeMessage<ComMessage>(NULL);
  }

  ComMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ComMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ComMessage& from);
  void MergeFrom(const ComMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Message avail_messages = 2;
  int avail_messages_size() const;
  void clear_avail_messages();
  static const int kAvailMessagesFieldNumber = 2;
  ::Message* mutable_avail_messages(int index);
  ::google::protobuf::RepeatedPtrField< ::Message >*
      mutable_avail_messages();
  const ::Message& avail_messages(int index) const;
  ::Message* add_avail_messages();
  const ::google::protobuf::RepeatedPtrField< ::Message >&
      avail_messages() const;

  // repeated .Message payload = 3;
  int payload_size() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 3;
  ::Message* mutable_payload(int index);
  ::google::protobuf::RepeatedPtrField< ::Message >*
      mutable_payload();
  const ::Message& payload(int index) const;
  ::Message* add_payload();
  const ::google::protobuf::RepeatedPtrField< ::Message >&
      payload() const;

  // repeated .Message req_messages = 4;
  int req_messages_size() const;
  void clear_req_messages();
  static const int kReqMessagesFieldNumber = 4;
  ::Message* mutable_req_messages(int index);
  ::google::protobuf::RepeatedPtrField< ::Message >*
      mutable_req_messages();
  const ::Message& req_messages(int index) const;
  ::Message* add_req_messages();
  const ::google::protobuf::RepeatedPtrField< ::Message >&
      req_messages() const;

  // .ComMessageType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::ComMessageType type() const;
  void set_type(::ComMessageType value);

  // @@protoc_insertion_point(class_scope:ComMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Message > avail_messages_;
  ::google::protobuf::RepeatedPtrField< ::Message > payload_;
  ::google::protobuf::RepeatedPtrField< ::Message > req_messages_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rtds_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MessageField

// string name = 1;
inline void MessageField::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MessageField::name() const {
  // @@protoc_insertion_point(field_get:MessageField.name)
  return name_.GetNoArena();
}
inline void MessageField::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageField.name)
}
#if LANG_CXX11
inline void MessageField::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageField.name)
}
#endif
inline void MessageField::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageField.name)
}
inline void MessageField::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageField.name)
}
inline ::std::string* MessageField::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:MessageField.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageField::release_name() {
  // @@protoc_insertion_point(field_release:MessageField.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageField::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MessageField.name)
}

// float value = 2;
inline void MessageField::clear_value() {
  value_ = 0;
}
inline float MessageField::value() const {
  // @@protoc_insertion_point(field_get:MessageField.value)
  return value_;
}
inline void MessageField::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:MessageField.value)
}

// -------------------------------------------------------------------

// Message

// string proto = 1;
inline void Message::clear_proto() {
  proto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message::proto() const {
  // @@protoc_insertion_point(field_get:Message.proto)
  return proto_.GetNoArena();
}
inline void Message::set_proto(const ::std::string& value) {
  
  proto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.proto)
}
#if LANG_CXX11
inline void Message::set_proto(::std::string&& value) {
  
  proto_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message.proto)
}
#endif
inline void Message::set_proto(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  proto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.proto)
}
inline void Message::set_proto(const char* value, size_t size) {
  
  proto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.proto)
}
inline ::std::string* Message::mutable_proto() {
  
  // @@protoc_insertion_point(field_mutable:Message.proto)
  return proto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_proto() {
  // @@protoc_insertion_point(field_release:Message.proto)
  
  return proto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_proto(::std::string* proto) {
  if (proto != NULL) {
    
  } else {
    
  }
  proto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proto);
  // @@protoc_insertion_point(field_set_allocated:Message.proto)
}

// int32 id = 2;
inline void Message::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Message::id() const {
  // @@protoc_insertion_point(field_get:Message.id)
  return id_;
}
inline void Message::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Message.id)
}

// string name = 3;
inline void Message::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message::name() const {
  // @@protoc_insertion_point(field_get:Message.name)
  return name_.GetNoArena();
}
inline void Message::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.name)
}
#if LANG_CXX11
inline void Message::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message.name)
}
#endif
inline void Message::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.name)
}
inline void Message::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.name)
}
inline ::std::string* Message::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Message.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_name() {
  // @@protoc_insertion_point(field_release:Message.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Message.name)
}

// uint64 ts = 4;
inline void Message::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Message::ts() const {
  // @@protoc_insertion_point(field_get:Message.ts)
  return ts_;
}
inline void Message::set_ts(::google::protobuf::uint64 value) {
  
  ts_ = value;
  // @@protoc_insertion_point(field_set:Message.ts)
}

// repeated .MessageField fields = 5;
inline int Message::fields_size() const {
  return fields_.size();
}
inline void Message::clear_fields() {
  fields_.Clear();
}
inline ::MessageField* Message::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:Message.fields)
  return fields_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::MessageField >*
Message::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:Message.fields)
  return &fields_;
}
inline const ::MessageField& Message::fields(int index) const {
  // @@protoc_insertion_point(field_get:Message.fields)
  return fields_.Get(index);
}
inline ::MessageField* Message::add_fields() {
  // @@protoc_insertion_point(field_add:Message.fields)
  return fields_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MessageField >&
Message::fields() const {
  // @@protoc_insertion_point(field_list:Message.fields)
  return fields_;
}

// -------------------------------------------------------------------

// ComMessage

// .ComMessageType type = 1;
inline void ComMessage::clear_type() {
  type_ = 0;
}
inline ::ComMessageType ComMessage::type() const {
  // @@protoc_insertion_point(field_get:ComMessage.type)
  return static_cast< ::ComMessageType >(type_);
}
inline void ComMessage::set_type(::ComMessageType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ComMessage.type)
}

// repeated .Message avail_messages = 2;
inline int ComMessage::avail_messages_size() const {
  return avail_messages_.size();
}
inline void ComMessage::clear_avail_messages() {
  avail_messages_.Clear();
}
inline ::Message* ComMessage::mutable_avail_messages(int index) {
  // @@protoc_insertion_point(field_mutable:ComMessage.avail_messages)
  return avail_messages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Message >*
ComMessage::mutable_avail_messages() {
  // @@protoc_insertion_point(field_mutable_list:ComMessage.avail_messages)
  return &avail_messages_;
}
inline const ::Message& ComMessage::avail_messages(int index) const {
  // @@protoc_insertion_point(field_get:ComMessage.avail_messages)
  return avail_messages_.Get(index);
}
inline ::Message* ComMessage::add_avail_messages() {
  // @@protoc_insertion_point(field_add:ComMessage.avail_messages)
  return avail_messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message >&
ComMessage::avail_messages() const {
  // @@protoc_insertion_point(field_list:ComMessage.avail_messages)
  return avail_messages_;
}

// repeated .Message payload = 3;
inline int ComMessage::payload_size() const {
  return payload_.size();
}
inline void ComMessage::clear_payload() {
  payload_.Clear();
}
inline ::Message* ComMessage::mutable_payload(int index) {
  // @@protoc_insertion_point(field_mutable:ComMessage.payload)
  return payload_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Message >*
ComMessage::mutable_payload() {
  // @@protoc_insertion_point(field_mutable_list:ComMessage.payload)
  return &payload_;
}
inline const ::Message& ComMessage::payload(int index) const {
  // @@protoc_insertion_point(field_get:ComMessage.payload)
  return payload_.Get(index);
}
inline ::Message* ComMessage::add_payload() {
  // @@protoc_insertion_point(field_add:ComMessage.payload)
  return payload_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message >&
ComMessage::payload() const {
  // @@protoc_insertion_point(field_list:ComMessage.payload)
  return payload_;
}

// repeated .Message req_messages = 4;
inline int ComMessage::req_messages_size() const {
  return req_messages_.size();
}
inline void ComMessage::clear_req_messages() {
  req_messages_.Clear();
}
inline ::Message* ComMessage::mutable_req_messages(int index) {
  // @@protoc_insertion_point(field_mutable:ComMessage.req_messages)
  return req_messages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Message >*
ComMessage::mutable_req_messages() {
  // @@protoc_insertion_point(field_mutable_list:ComMessage.req_messages)
  return &req_messages_;
}
inline const ::Message& ComMessage::req_messages(int index) const {
  // @@protoc_insertion_point(field_get:ComMessage.req_messages)
  return req_messages_.Get(index);
}
inline ::Message* ComMessage::add_req_messages() {
  // @@protoc_insertion_point(field_add:ComMessage.req_messages)
  return req_messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message >&
ComMessage::req_messages() const {
  // @@protoc_insertion_point(field_list:ComMessage.req_messages)
  return req_messages_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ComMessageType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ComMessageType>() {
  return ::ComMessageType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_rtds_2eproto
